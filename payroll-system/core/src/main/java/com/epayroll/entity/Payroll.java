package com.epayroll.entity;

// Generated Dec 22, 2012 3:36:44 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Payroll generated by hbm2java
 */
@Entity
@Table(name = "payroll")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class Payroll implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1525945376771447847L;

	public enum Status {
		ACTIVE("Active"), INACTIVE("InActive"), ENTERED("Entered"), APPROVED("Approved"), PROCESS_LATER(
				"Process Later"), PROCESSED("Processed");
		private String name;

		private Status(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	public enum PayrollType {
		NORMAL("Normal"), ADDITIONAL("Additional"), MANUAL_CHECK("Manual Check");
		private String name;

		private PayrollType(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	private Long id;
	private Company company;
	private PayrollType payrollType;
	private PayrollSchedule payrollSchedule;
	private Date startDate;
	private Date endDate;
	private Date checkDate;
	private String checkStubMessage;
	private Status payrollStatus;
	private Date creationDate;
	private Date approvalDate;
	private Set<EmployeePayroll> employeePayrolls = new HashSet<EmployeePayroll>(0);
	private Set<PayrollTaxContribution> payrollTaxContributions = new HashSet<PayrollTaxContribution>(
			0);
	private Set<PayrollInvoice> payrollInvoices = new HashSet<PayrollInvoice>(0);
	private Set<FundTransaction> fundTransactions = new HashSet<FundTransaction>(0);

	public Payroll() {
	}

	public Payroll(Long id, Date checkDate, Date startDate, Date endDate) {
		this.id = id;
		this.checkDate = checkDate;
		this.startDate = startDate;
		this.endDate = endDate;
	}

	public Payroll(Company company, PayrollType payrollType, PayrollSchedule payrollSchedule,
			Date startDate, Date endDate, Date checkDate, Date creationDate) {

		this.company = company;
		this.payrollType = payrollType;
		this.payrollSchedule = payrollSchedule;
		this.startDate = startDate;
		this.endDate = endDate;
		this.checkDate = checkDate;
		this.creationDate = creationDate;
	}

	public Payroll(Company company, PayrollType payrollType, PayrollSchedule payrollSchedule,
			Date startDate, Date endDate, Date checkDate, String checkStubMessage,
			Status payrollStatus, Date creationDate, Date approvalDate,
			Set<EmployeePayroll> employeePayrolls,
			Set<PayrollTaxContribution> payrollTaxContributions,
			Set<PayrollInvoice> payrollInvoices, Set<FundTransaction> fundTransactions) {
		this.company = company;
		this.payrollType = payrollType;
		this.payrollSchedule = payrollSchedule;
		this.startDate = startDate;
		this.endDate = endDate;
		this.checkDate = checkDate;
		this.checkStubMessage = checkStubMessage;
		this.payrollStatus = payrollStatus;
		this.creationDate = creationDate;
		this.approvalDate = approvalDate;
		this.employeePayrolls = employeePayrolls;
		this.payrollTaxContributions = payrollTaxContributions;
		this.payrollInvoices = payrollInvoices;
		this.fundTransactions = fundTransactions;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "payroll_type", nullable = true)
	public PayrollType getPayrollType() {
		return this.payrollType;
	}

	public void setPayrollType(PayrollType payrollType) {
		this.payrollType = payrollType;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payroll_schedule_id")
	public PayrollSchedule getPayrollSchedule() {
		return this.payrollSchedule;
	}

	public void setPayrollSchedule(PayrollSchedule payrollSchedule) {
		this.payrollSchedule = payrollSchedule;
	}

	@Column(name = "start_date", length = 10)
	public Date getStartDate() {
		return this.startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "end_date", length = 10)
	public Date getEndDate() {
		return this.endDate;
	}

	public void setEndDate(Date endDate) {
		this.endDate = endDate;
	}

	@Column(name = "check_date", length = 10)
	public Date getCheckDate() {
		return this.checkDate;
	}

	public void setCheckDate(Date checkDate) {
		this.checkDate = checkDate;
	}

	@Column(name = "check_stub_message", length = 100, nullable = true)
	public String getCheckStubMessage() {
		return this.checkStubMessage;
	}

	public void setCheckStubMessage(String checkStubMessage) {
		this.checkStubMessage = checkStubMessage;
	}

	@Column(name = "payroll_status", length = 45)
	public Status getPayrollStatus() {
		return this.payrollStatus;
	}

	public void setPayrollStatus(Status payrollStatus) {
		this.payrollStatus = payrollStatus;
	}

	@Column(name = "creation_date", nullable = false, length = 19, columnDefinition = "TIMESTAMP DEFAULT CURRENT_TIMESTAMP")
	public Date getCreationDate() {
		return this.creationDate;
	}

	public void setCreationDate(Date creationDate) {
		this.creationDate = creationDate;
	}

	@Column(name = "approval_date", length = 10, nullable = true)
	public Date getApprovalDate() {
		return this.approvalDate;
	}

	public void setApprovalDate(Date approvalDate) {
		this.approvalDate = approvalDate;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payroll", cascade = CascadeType.ALL)
	public Set<EmployeePayroll> getEmployeePayrolls() {
		return this.employeePayrolls;
	}

	public void setEmployeePayrolls(Set<EmployeePayroll> employeePayrolls) {
		this.employeePayrolls = employeePayrolls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payroll")
	public Set<PayrollTaxContribution> getPayrollTaxContributions() {
		return this.payrollTaxContributions;
	}

	public void setPayrollTaxContributions(Set<PayrollTaxContribution> payrollTaxContributions) {
		this.payrollTaxContributions = payrollTaxContributions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payroll")
	public Set<PayrollInvoice> getPayrollInvoices() {
		return this.payrollInvoices;
	}

	public void setPayrollInvoices(Set<PayrollInvoice> payrollInvoices) {
		this.payrollInvoices = payrollInvoices;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payroll")
	public Set<FundTransaction> getCompanyTransactions() {
		return this.fundTransactions;
	}

	public void setCompanyTransactions(Set<FundTransaction> fundTransactions) {
		this.fundTransactions = fundTransactions;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Payroll [id=");
		builder.append(id);
		if (company != null) {
			builder.append(", company=");
			builder.append(company.getId());
		}
		builder.append(", payrollType=");
		builder.append(payrollType);
		if (payrollSchedule != null) {
			builder.append(", payrollSchedule=");
			builder.append(payrollSchedule.getId());
		}
		builder.append(", startDate=");
		builder.append(startDate);
		builder.append(", endDate=");
		builder.append(endDate);
		builder.append(", checkDate=");
		builder.append(checkDate);
		builder.append(", checkStubMessage=");
		builder.append(checkStubMessage);
		builder.append(", payrollStatus=");
		builder.append(payrollStatus);
		builder.append(", creationDate=");
		builder.append(creationDate);
		builder.append(", approvalDate=");
		builder.append(approvalDate);
		builder.append("]");
		return builder.toString();
	}

}
