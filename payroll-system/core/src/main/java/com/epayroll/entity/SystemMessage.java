package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * SystemMessage generated by hbm2java
 */
@Entity
@Table(name = "system_message")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class SystemMessage implements java.io.Serializable, Comparable<SystemMessage> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1339895912200480539L;

	private Long id;
	private Date dateReceived;
	private String messageText;
	private Set<SystemMessageUserMap> systemMessageUserMaps = new HashSet<SystemMessageUserMap>(0);

	public SystemMessage() {
	}

	public SystemMessage(Date dateReceived, String messageText) {
		this.dateReceived = dateReceived;
		this.messageText = messageText;
	}

	public SystemMessage(Date dateReceived, String messageText,
			Set<SystemMessageUserMap> systemMessageUserMaps) {
		this.dateReceived = dateReceived;
		this.messageText = messageText;
		this.setSystemMessageUserMaps(systemMessageUserMaps);
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_received", length = 19)
	public Date getDateReceived() {
		return this.dateReceived;
	}

	public void setDateReceived(Date dateReceived) {
		this.dateReceived = dateReceived;
	}

	@Column(name = "message_text", length = 300)
	public String getMessageText() {
		return this.messageText;
	}

	public void setMessageText(String messageText) {
		this.messageText = messageText;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "systemMessage")
	public Set<SystemMessageUserMap> getSystemMessageUserMaps() {
		return systemMessageUserMaps;
	}

	public void setSystemMessageUserMaps(Set<SystemMessageUserMap> systemMessageUserMaps) {
		this.systemMessageUserMaps = systemMessageUserMaps;
	}

	@Override
	public int compareTo(SystemMessage systemMessage) {
		if (this.getDateReceived().compareTo(systemMessage.getDateReceived()) == 0) {
			return 1;
		}
		return this.getDateReceived().compareTo(systemMessage.getDateReceived());
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("SystemMessage [id=");
		builder.append(id);
		builder.append(", dateReceived=");
		builder.append(dateReceived);
		builder.append(", messageText=");
		builder.append(messageText);
		builder.append("]");
		return builder.toString();
	}

	// public static void main(String[] args) throws ParseException {
	// Set<SystemMessage> systemMessages = new TreeSet<SystemMessage>();
	// systemMessages.add(new SystemMessage(
	// new SimpleDateFormat("dd-MM-yyyy").parse("04-01-2013"), "abc"));
	// systemMessages.add(new SystemMessage(
	// new SimpleDateFormat("dd-MM-yyyy").parse("01-01-2013"), "abc"));
	// systemMessages.add(new SystemMessage(
	// new SimpleDateFormat("dd-MM-yyyy").parse("03-01-2013"), "abc"));
	// systemMessages.add(new SystemMessage(
	// new SimpleDateFormat("dd-MM-yyyy").parse("06-01-2013"), "abc"));
	// systemMessages.add(new SystemMessage(
	// new SimpleDateFormat("dd-MM-yyyy").parse("31-12-2012"), "abc"));
	// }
}
