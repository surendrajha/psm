package com.epayroll.entity;

// Generated Dec 22, 2012 3:36:44 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * UsCounty generated by hbm2java
 */
@Entity
@Table(name = "us_county", uniqueConstraints = { @UniqueConstraint(columnNames = { "us_state_id",
		"county_name" }) })
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
@JsonIgnoreProperties({ "usState", "countyTaxRates", "addresses", "taxAuthorities" })
public class UsCounty implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -6039682786656899167L;
	private Long id;
	private UsState usState;
	private String countyName;
	private Set<CountyTaxRate> countyTaxRates = new HashSet<CountyTaxRate>(0);
	private Set<Address> addresses = new HashSet<Address>(0);
	private Set<TaxAuthority> taxAuthorities = new HashSet<TaxAuthority>(0);

	public UsCounty() {
	}

	public UsCounty(UsState usState, String countyName) {
		this.usState = usState;
		this.countyName = countyName;
	}

	public UsCounty(UsState usState, String countyName, Set<CountyTaxRate> countyTaxRates,
			Set<Address> addresses, Set<TaxAuthority> taxAuthorities) {
		this.usState = usState;
		this.countyName = countyName;
		this.countyTaxRates = countyTaxRates;
		this.addresses = addresses;
		this.taxAuthorities = taxAuthorities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "us_state_id")
	public UsState getUsState() {
		return this.usState;
	}

	public void setUsState(UsState usState) {
		this.usState = usState;
	}

	@Column(name = "county_name", length = 45)
	public String getCountyName() {
		return this.countyName;
	}

	public void setCountyName(String countyName) {
		this.countyName = countyName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usCounty")
	public Set<CountyTaxRate> getCountyTaxRates() {
		return this.countyTaxRates;
	}

	public void setCountyTaxRates(Set<CountyTaxRate> countyTaxRates) {
		this.countyTaxRates = countyTaxRates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usCounty")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usCounty")
	public Set<TaxAuthority> getTaxAuthorities() {
		return taxAuthorities;
	}

	public void setTaxAuthorities(Set<TaxAuthority> taxAuthorities) {
		this.taxAuthorities = taxAuthorities;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("UsCounty [id=");
		builder.append(id);
		builder.append(", usState=");
		builder.append(usState.getId());
		builder.append(", countyName=");
		builder.append(countyName);
		builder.append("]");
		return builder.toString();
	}

}
