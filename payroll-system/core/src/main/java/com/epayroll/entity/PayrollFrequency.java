package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotNull;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;
import org.hibernate.validator.constraints.ScriptAssert;

/**
 * PayrollFrequency generated by hbm2java
 */
@Entity
@Table(name = "payroll_frequency")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
@ScriptAssert(lang = "javascript", script = "_this.periodEndDate==null || _this.checkDate==null  ? false: _this.periodEndDate.before(_this.checkDate)")
@JsonIgnoreProperties({ "company", "payrollSchedules", "employeePaySetups" })
public class PayrollFrequency implements java.io.Serializable {
	/**
	 * 
	 */
	private static final long serialVersionUID = 1309815817017476757L;
	private Long id;
	private Company company;
	private PayFrequencyType payFrequencyType;
	@NotNull
	// @DateTimeFormat(pattern = "MM/dd/yyyy")
	private Date periodStartDate;
	@NotNull
	// @DateTimeFormat(pattern = "MM/dd/yyyy")
	private Date periodEndDate;
	@NotNull
	// @DateTimeFormat(pattern = "MM/dd/yyyy")
	private Date checkDate;
	private String holidayCheckDateOption;
	private Set<PayrollSchedule> payrollSchedules = new HashSet<PayrollSchedule>(0);
	private Set<EmployeePaySetup> employeePaySetups = new HashSet<EmployeePaySetup>(0);

	public enum PayFrequencyType {
		MONTHLY("Monthly"), SEMI_MONTHLY("Semi-Monthly"), WEEKLY("Weekly"), BI_WEEKLY("Bi-Weekly");

		private String name;

		private PayFrequencyType(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	public PayrollFrequency() {
	}

	public PayrollFrequency(Company company, Date periodStartDate, Date periodEndDate,
			Date checkDate, String holidayCheckDateOption, Set<PayrollSchedule> payrollSchedules,
			Set<EmployeePaySetup> employeePaySetups, PayFrequencyType payFrequencyType) {
		this.company = company;
		this.periodStartDate = periodStartDate;
		this.periodEndDate = periodEndDate;
		this.checkDate = checkDate;
		this.holidayCheckDateOption = holidayCheckDateOption;
		this.payrollSchedules = payrollSchedules;
		this.employeePaySetups = employeePaySetups;
		this.payFrequencyType = payFrequencyType;
	}

	public PayrollFrequency(Company company, Date periodStartDate, Date periodEndDate,
			Date checkDate, String holidayCheckDateOption, Set<PayrollSchedule> payrollSchedules) {
		this.company = company;
		this.periodStartDate = periodStartDate;
		this.periodEndDate = periodEndDate;
		this.checkDate = checkDate;
		this.payrollSchedules = payrollSchedules;
		this.holidayCheckDateOption = holidayCheckDateOption;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@Column(name = "pay_frequency_type")
	public PayFrequencyType getPayFrequencyType() {
		return this.payFrequencyType;
	}

	public void setPayFrequencyType(PayFrequencyType payFrequencyType) {
		this.payFrequencyType = payFrequencyType;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "period_start_date", length = 10)
	public Date getPeriodStartDate() {
		return this.periodStartDate;
	}

	public void setPeriodStartDate(Date periodStartDate) {
		this.periodStartDate = periodStartDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "period_end_date", length = 10)
	public Date getPeriodEndDate() {
		return this.periodEndDate;
	}

	public void setPeriodEndDate(Date periodEndDate) {
		this.periodEndDate = periodEndDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "check_date", length = 10)
	public Date getCheckDate() {
		return this.checkDate;
	}

	public void setCheckDate(Date checkDate) {
		this.checkDate = checkDate;
	}

	@Column(name = "holiday_check_date_option", length = 10)
	public String getHolidayCheckDateOption() {
		return holidayCheckDateOption;
	}

	public void setHolidayCheckDateOption(String holidayCheckDateOption) {
		this.holidayCheckDateOption = holidayCheckDateOption;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payrollFrequency", cascade = CascadeType.ALL)
	public Set<PayrollSchedule> getPayrollSchedules() {
		return this.payrollSchedules;
	}

	public void setPayrollSchedules(Set<PayrollSchedule> payrollSchedules) {
		this.payrollSchedules = payrollSchedules;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payrollFrequency", cascade = CascadeType.ALL)
	public Set<EmployeePaySetup> getEmployeePaySetups() {
		return employeePaySetups;
	}

	public void setEmployeePaySetups(Set<EmployeePaySetup> employeePaySetups) {
		this.employeePaySetups = employeePaySetups;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("PayrollFrequency [id=");
		builder.append(id);
		builder.append(", company=");
		builder.append(company);
		builder.append(", payFrequencyType=");
		builder.append(payFrequencyType);
		builder.append(", periodStartDate=");
		builder.append(periodStartDate);
		builder.append(", periodEndDate=");
		builder.append(periodEndDate);
		builder.append(", checkDate=");
		builder.append(checkDate);
		builder.append(", holidayCheckDateOption=");
		builder.append(holidayCheckDateOption);
		builder.append("]");
		return builder.toString();
	}
}
