package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Address generated by hbm2java
 */
@Entity
@Table(name = "address")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class Address implements java.io.Serializable {

	private static final long serialVersionUID = -8397012669751561437L;
	private Long id;
	private UsCity usCity;
	private UsState usState;
	private UsCounty usCounty;
	private AddressType addressType;
	private String cityName;
	private String country;
	private String streetAddress;
	private String landmark;
	private String pinZip;
	private String countyName;
	private Set<PayrollCompany> payrollCompanies = new HashSet<PayrollCompany>(0);
	private Set<User> users = new HashSet<User>(0);
	private Set<TaxAuthority> taxAuthorities = new HashSet<TaxAuthority>(0);

	public Address() {
	}

	public Address(UsCity usCity, UsState usState, UsCounty usCounty, AddressType addressType,
			String cityName, String pinZip, String countyName) {
		this.usCity = usCity;
		this.usState = usState;
		this.usCounty = usCounty;
		this.addressType = addressType;
		this.cityName = cityName;
		this.pinZip = pinZip;
		this.countyName = countyName;
	}

	public Address(UsCity usCity, UsState usState, UsCounty usCounty, AddressType addressType,
			String cityName, String country, String landmark, String pinZip, String streetAddress,
			String countyName, Set<PayrollCompany> payrollCompanies, Set<User> users,
			Set<TaxAuthority> taxAuthorities) {
		this.usCity = usCity;
		this.usState = usState;
		this.usCounty = usCounty;
		this.addressType = addressType;
		this.cityName = cityName;
		this.country = country;
		this.landmark = landmark;
		this.pinZip = pinZip;
		this.streetAddress = streetAddress;
		this.countyName = countyName;
		this.payrollCompanies = payrollCompanies;
		this.users = users;
		this.taxAuthorities = taxAuthorities;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "us_city_id")
	public UsCity getUsCity() {
		return this.usCity;
	}

	public void setUsCity(UsCity usCity) {
		this.usCity = usCity;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "us_state_id")
	public UsState getUsState() {
		return this.usState;
	}

	public void setUsState(UsState usState) {
		this.usState = usState;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "us_county_id")
	public UsCounty getUsCounty() {
		return this.usCounty;
	}

	public void setUsCounty(UsCounty usCounty) {
		this.usCounty = usCounty;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "address_type_id")
	public AddressType getAddressType() {
		return this.addressType;
	}

	public void setAddressType(AddressType addressType) {
		this.addressType = addressType;
	}

	@Column(name = "city_name", length = 20)
	public String getCityName() {
		return this.cityName;
	}

	public void setCityName(String cityName) {
		this.cityName = cityName;
	}

	@Column(name = "country", length = 20)
	public String getCountry() {
		return this.country;
	}

	public void setCountry(String country) {
		this.country = country;
	}

	@Column(name = "landmark", length = 50)
	public String getLandmark() {
		return this.landmark;
	}

	public void setLandmark(String landmark) {
		this.landmark = landmark;
	}

	@Column(name = "pin_zip", length = 10)
	public String getPinZip() {
		return this.pinZip;
	}

	public void setPinZip(String pinZip) {
		this.pinZip = pinZip;
	}

	@Column(name = "street_address", length = 100)
	public String getStreetAddress() {
		return this.streetAddress;
	}

	public void setStreetAddress(String streetAddress) {
		this.streetAddress = streetAddress;
	}

	@Column(name = "county_name", length = 45)
	public String getCountyName() {
		return this.countyName;
	}

	public void setCountyName(String countyName) {
		this.countyName = countyName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
	public Set<PayrollCompany> getPayrollCompanies() {
		return this.payrollCompanies;
	}

	public void setPayrollCompanies(Set<PayrollCompany> payrollCompanies) {
		this.payrollCompanies = payrollCompanies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
	public Set<User> getUsers() {
		return this.users;
	}

	public void setUsers(Set<User> users) {
		this.users = users;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "address")
	public Set<TaxAuthority> getTaxAuthorities() {
		return this.taxAuthorities;
	}

	public void setTaxAuthorities(Set<TaxAuthority> taxAuthorities) {
		this.taxAuthorities = taxAuthorities;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Address [id=");
		builder.append(id);
		builder.append(", usCity=");
		builder.append(usCity);
		builder.append(", usState=");
		builder.append(usState);
		builder.append(", usCounty=");
		builder.append(usCounty);
		builder.append(", addressType=");
		builder.append(addressType.getId());
		builder.append(", cityName=");
		builder.append(cityName);
		builder.append(", country=");
		builder.append(country);
		builder.append(", streetAddress=");
		builder.append(streetAddress);
		builder.append(", landmark=");
		builder.append(landmark);
		builder.append(", pinZip=");
		builder.append(pinZip);
		builder.append(", countyName=");
		builder.append(countyName);
		builder.append("]");
		return builder.toString();
	}

}
