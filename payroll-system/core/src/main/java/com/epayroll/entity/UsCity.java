package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * UsCity generated by hbm2java
 */
@Entity
@Table(name = "us_city")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
@JsonIgnoreProperties({ "usState", "addresses" })
public class UsCity implements java.io.Serializable {

	private static final long serialVersionUID = 3249089707603247266L;
	private Long id;
	private UsState usState;
	private String cityName;
	private Set<Address> addresses = new HashSet<Address>(0);

	public UsCity() {
	}

	public UsCity(UsState usState, String cityName) {
		this.usState = usState;
		this.cityName = cityName;
	}

	public UsCity(UsState usState, String cityName, Set<Address> addresses) {
		this.usState = usState;
		this.cityName = cityName;
		this.addresses = addresses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "us_state_id")
	public UsState getUsState() {
		return usState;
	}

	public void setUsState(UsState usState) {
		this.usState = usState;
	}

	@Column(name = "city_name", length = 45)
	public String getCityName() {
		return this.cityName;
	}

	public void setCityName(String cityName) {
		this.cityName = cityName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "usCity")
	public Set<Address> getAddresses() {
		return this.addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("UsCity [id=");
		builder.append(id);
		builder.append(", usState=");
		builder.append(usState.getId());
		builder.append(", cityName=");
		builder.append(cityName);
		builder.append("]");
		return builder.toString();
	}

}
