package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * UserSecurityQuestion generated by hbm2java
 */
@Entity
@Table(name = "user_security_question")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class UserSecurityQuestion implements java.io.Serializable {

	private static final long serialVersionUID = 3676780989613848422L;
	private Long id;
	private User user;
	private SecurityQuestion securityQuestion;
	private String answer;

	public UserSecurityQuestion() {
	}

	public UserSecurityQuestion(User user, SecurityQuestion securityQuestion, String answer) {
		this.user = user;
		this.securityQuestion = securityQuestion;
		this.answer = answer;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "security_question_id", nullable = true)
	public SecurityQuestion getSecurityQuestion() {
		return this.securityQuestion;
	}

	public void setSecurityQuestion(SecurityQuestion securityQuestion) {
		this.securityQuestion = securityQuestion;
	}

	@Column(name = "answer", length = 100)
	public String getAnswer() {
		return this.answer;
	}

	public void setAnswer(String answer) {
		this.answer = answer;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("UserSecurityQuestion [id=");
		builder.append(id);
		builder.append(", user=");
		builder.append(user.getId());
		builder.append(", securityQuestion=");
		builder.append(securityQuestion.getId());
		builder.append(", answer=");
		builder.append(answer);
		builder.append("]");
		return builder.toString();
	}

}
