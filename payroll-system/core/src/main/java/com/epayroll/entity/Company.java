package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Company generated by hbm2java
 */
@Entity
@Table(name = "company")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class Company implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 8948505937652998534L;

	public enum Status {
		NEW("New"), // When company account is just created. No payroll data is
					// entered
		// or processed. Can be deleted if needed.
		ACTIVE("Active"), // When first payroll is processed, cannot be deleted
							// in any
		// case.
		INACTIVE("InActive"); // When company is no more associated with us but
								// having some
		// payrolls processed, cannot be deleted in any case.
		private String name;

		private Status(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	private Long id;
	private String businessFax;
	private String businessName;
	private String businessPhone;
	private String clientId;
	private String companyNameOnCheck;
	private String fein;
	private String legalName;
	private Status status;
	private String webAddress;
	private Set<EmployeeSection> employeeSections = new HashSet<EmployeeSection>(0);
	private Set<CompanyEarning> companyEarnings = new HashSet<CompanyEarning>(0);
	private Set<FutaSutaTaxRate> futaSutaTaxRates = new HashSet<FutaSutaTaxRate>(0);
	private Set<PayrollFrequency> payrollFrequencies = new HashSet<PayrollFrequency>(0);
	private Set<CompanyDeduction> companyDeductions = new HashSet<CompanyDeduction>(0);
	private Set<Employee> employees = new HashSet<Employee>(0);
	private Set<CompanyUser> companyUsers = new HashSet<CompanyUser>(0);
	private Set<FundTransaction> fundTransactions = new HashSet<FundTransaction>(0);
	private Set<Payroll> payrolls = new HashSet<Payroll>(0);
	private Set<CompanyPaidBenefit> companyPaidBenefits = new HashSet<CompanyPaidBenefit>(0);
	private Set<CompanyDepartment> companyDepartments = new HashSet<CompanyDepartment>(0);
	private Set<SectionRolePermissionMap> sectionRolePermissionMaps = new HashSet<SectionRolePermissionMap>(
			0);
	private Set<CompanyBankInfo> companyBankInfos = new HashSet<CompanyBankInfo>(0);
	private Set<CompanyWorkerCompensation> companyWorkerCompensations = new HashSet<CompanyWorkerCompensation>(
			0);
	private Set<CompanyTax> companyTaxes = new HashSet<CompanyTax>(0);
	private Set<CompanyFeature> companyFeatures = new HashSet<CompanyFeature>(0);
	private Set<Address> addresses = new HashSet<>(0);
	private Set<Person> contacts = new HashSet<>(0);

	public Company() {
	}

	public Company(String legalName, Status status) {
		this.legalName = legalName;
		this.status = status;
	}

	public Company(Long id, String businessFax, String businessName, String businessPhone,
			String clientId, String companyNameOnCheck, String fein, String legalName,
			Status status, String webAddress, Set<EmployeeSection> employeeSections,
			Set<CompanyEarning> companyEarnings, Set<FutaSutaTaxRate> futaSutaTaxRates,
			Set<PayrollFrequency> payrollFrequencies, Set<CompanyDeduction> companyDeductions,
			Set<Employee> employees, Set<CompanyUser> companyUsers,
			Set<FundTransaction> fundTransactions, Set<Payroll> payrolls,
			Set<CompanyPaidBenefit> companyPaidBenefits, Set<CompanyDepartment> companyDepartments,
			Set<SectionRolePermissionMap> sectionRolePermissionMaps,
			Set<CompanyBankInfo> companyBankInfos,
			Set<CompanyWorkerCompensation> companyWorkerCompensations,
			Set<CompanyTax> companyTaxes, Set<CompanyFeature> companyFeatures,
			Set<Address> addresses, Set<Person> contacts) {
		super();
		this.id = id;
		this.businessFax = businessFax;
		this.businessName = businessName;
		this.businessPhone = businessPhone;
		this.clientId = clientId;
		this.companyNameOnCheck = companyNameOnCheck;
		this.fein = fein;
		this.legalName = legalName;
		this.status = status;
		this.webAddress = webAddress;
		this.employeeSections = employeeSections;
		this.companyEarnings = companyEarnings;
		this.futaSutaTaxRates = futaSutaTaxRates;
		this.payrollFrequencies = payrollFrequencies;
		this.companyDeductions = companyDeductions;
		this.employees = employees;
		this.companyUsers = companyUsers;
		this.fundTransactions = fundTransactions;
		this.payrolls = payrolls;
		this.companyPaidBenefits = companyPaidBenefits;
		this.companyDepartments = companyDepartments;
		this.sectionRolePermissionMaps = sectionRolePermissionMaps;
		this.companyBankInfos = companyBankInfos;
		this.companyWorkerCompensations = companyWorkerCompensations;
		this.companyTaxes = companyTaxes;
		this.companyFeatures = companyFeatures;
		this.addresses = addresses;
		this.contacts = contacts;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@Column(name = "client_id", length = 10)
	public String getClientId() {
		return this.clientId;
	}

	public void setClientId(String clientId) {
		this.clientId = clientId;
	}

	@Column(name = "legal_name", length = 45)
	public String getLegalName() {
		return this.legalName;
	}

	public void setLegalName(String legalName) {
		this.legalName = legalName;
	}

	@Column(name = "business_name", length = 45)
	public String getBusinessName() {
		return this.businessName;
	}

	public void setBusinessName(String businessName) {
		this.businessName = businessName;
	}

	@Column(name = "business_phone", length = 20)
	public String getBusinessPhone() {
		return this.businessPhone;
	}

	public void setBusinessPhone(String businessPhone) {
		this.businessPhone = businessPhone;
	}

	@Column(name = "business_fax", length = 20)
	public String getBusinessFax() {
		return this.businessFax;
	}

	public void setBusinessFax(String businessFax) {
		this.businessFax = businessFax;
	}

	@Column(name = "web_address", length = 50)
	public String getWebAddress() {
		return this.webAddress;
	}

	public void setWebAddress(String webAddress) {
		this.webAddress = webAddress;
	}

	@ManyToMany(fetch = FetchType.LAZY, cascade = CascadeType.ALL)
	@JoinTable(name = "company_employee_section_map", joinColumns = { @JoinColumn(name = "company_id", updatable = false) }, inverseJoinColumns = { @JoinColumn(name = "employee_section_id", updatable = false) })
	public Set<EmployeeSection> getEmployeeSections() {
		return employeeSections;
	}

	public void setEmployeeSections(Set<EmployeeSection> employeeSections) {
		this.employeeSections = employeeSections;
	}

	@Column(name = "fein", length = 25)
	public String getFein() {
		return this.fein;
	}

	public void setFein(String fein) {
		this.fein = fein;
	}

	@Column(name = "company_name_on_check", length = 35)
	public String getCompanyNameOnCheck() {
		return this.companyNameOnCheck;
	}

	public void setCompanyNameOnCheck(String companyNameOnCheck) {
		this.companyNameOnCheck = companyNameOnCheck;
	}

	@Column(name = "status", length = 20)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<FutaSutaTaxRate> getSutaTaxRates() {
		return this.futaSutaTaxRates;
	}

	public void setSutaTaxRates(Set<FutaSutaTaxRate> futaSutaTaxRates) {
		this.futaSutaTaxRates = futaSutaTaxRates;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyDeduction> getCompanyDeductions() {
		return this.companyDeductions;
	}

	public void setCompanyDeductions(Set<CompanyDeduction> companyDeductions) {
		this.companyDeductions = companyDeductions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<Employee> getEmployees() {
		return this.employees;
	}

	public void setEmployees(Set<Employee> employees) {
		this.employees = employees;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyUser> getCompanyUsers() {
		return this.companyUsers;
	}

	public void setCompanyUsers(Set<CompanyUser> companyUsers) {
		this.companyUsers = companyUsers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<FundTransaction> getCompanyTransactions() {
		return this.fundTransactions;
	}

	public void setCompanyTransactions(Set<FundTransaction> fundTransactions) {
		this.fundTransactions = fundTransactions;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<Payroll> getPayrolls() {
		return this.payrolls;
	}

	public void setPayrolls(Set<Payroll> payrolls) {
		this.payrolls = payrolls;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<SectionRolePermissionMap> getSectionRolePermissionMaps() {
		return this.sectionRolePermissionMaps;
	}

	public void setSectionRolePermissionMaps(Set<SectionRolePermissionMap> sectionRolePermissionMaps) {
		this.sectionRolePermissionMaps = sectionRolePermissionMaps;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<PayrollFrequency> getPayrollFrequencies() {
		return this.payrollFrequencies;
	}

	public void setPayrollFrequencies(Set<PayrollFrequency> payrollFrequencies) {
		this.payrollFrequencies = payrollFrequencies;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyBankInfo> getCompanyBankInfos() {
		return this.companyBankInfos;
	}

	public void setCompanyBankInfos(Set<CompanyBankInfo> companyBankInfos) {
		this.companyBankInfos = companyBankInfos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyWorkerCompensation> getCompanyWorkerCompensations() {
		return this.companyWorkerCompensations;
	}

	public void setCompanyWorkerCompensations(
			Set<CompanyWorkerCompensation> companyWorkerCompensations) {
		this.companyWorkerCompensations = companyWorkerCompensations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyEarning> getCompanyEarnings() {
		return this.companyEarnings;
	}

	public void setCompanyEarnings(Set<CompanyEarning> companyEarnings) {
		this.companyEarnings = companyEarnings;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyTax> getCompanyTaxes() {
		return this.companyTaxes;
	}

	public void setCompanyTaxes(Set<CompanyTax> companyTaxes) {
		this.companyTaxes = companyTaxes;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyPaidBenefit> getCompanyPaidBenefits() {
		return this.companyPaidBenefits;
	}

	public void setCompanyPaidBenefits(Set<CompanyPaidBenefit> companyPaidBenefits) {
		this.companyPaidBenefits = companyPaidBenefits;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyDepartment> getCompanyDepartments() {
		return this.companyDepartments;
	}

	public void setCompanyDepartments(Set<CompanyDepartment> companyDepartments) {
		this.companyDepartments = companyDepartments;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "company", cascade = CascadeType.ALL)
	public Set<CompanyFeature> getCompanyFeatures() {
		return this.companyFeatures;
	}

	public void setCompanyFeatures(Set<CompanyFeature> companyFeatures) {
		this.companyFeatures = companyFeatures;
	}

	@OneToMany(cascade = CascadeType.ALL)
	public Set<Address> getAddresses() {
		return addresses;
	}

	public void setAddresses(Set<Address> addresses) {
		this.addresses = addresses;
	}

	@OneToMany(cascade = CascadeType.ALL)
	public Set<Person> getContacts() {
		return contacts;
	}

	public void setContacts(Set<Person> contacts) {
		this.contacts = contacts;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Company [id=");
		builder.append(id);
		builder.append(", businessFax=");
		builder.append(businessFax);
		builder.append(", businessName=");
		builder.append(businessName);
		builder.append(", businessPhone=");
		builder.append(businessPhone);
		builder.append(", clientId=");
		builder.append(clientId);
		builder.append(", companyNameOnCheck=");
		builder.append(companyNameOnCheck);
		builder.append(", fein=");
		builder.append(fein);
		builder.append(", legalName=");
		builder.append(legalName);
		builder.append(", status=");
		builder.append(status);
		builder.append(", webAddress=");
		builder.append(webAddress);
		builder.append("]");
		return builder.toString();
	}

}
