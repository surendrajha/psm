package com.epayroll.entity;

// Generated Dec 22, 2012 3:36:44 AM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

/**
 * EmployeePayrollTax generated by hbm2java
 */
@Entity
@Table(name = "employee_payroll_tax")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class EmployeePayrollTax implements java.io.Serializable {

	/**
	 * 
	 */

	private static final long serialVersionUID = 2432389242782822204L;
	private Long id;
	private EmployeePayroll employeePayroll;
	private EmployeeTax employeeTax;
	private TaxOverrideFrom taxOverrideFrom;
	private TaxOverrideType taxOverrideType;
	private BigDecimal taxOverrideValue;
	private BigDecimal calculatedTax;
	private BigDecimal calculatedY2d;

	public enum TaxOverrideFrom {
		NO_OVERRIDE("No Override"), FROM_COMPANY("From Company"), FROM_PAYROLL("From Payroll");
		private String name;

		private TaxOverrideFrom(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}

	}

	public enum TaxOverrideType {
		FLAT_DOLLAR_AMOUNT("Flat Dollar Amount"), ADDITIONAL_DOLLAR_AMOUNT(
				"Additional Dollar Amount"), FLAT_PERCENTAGE_AMOUNT("Flat Percentage Amount"), ADDITIONAL_PERCENTAGE_AMOUNT(
				"Additional Percentage Amount"), DONT_TAKE("Dont Take");
		private String name;

		private TaxOverrideType(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	public EmployeePayrollTax() {
	}

	public EmployeePayrollTax(EmployeePayroll employeePayroll, EmployeeTax employeeTax,
			TaxOverrideType taxOverrideType) {
		this.employeePayroll = employeePayroll;
		this.employeeTax = employeeTax;
		this.taxOverrideType = taxOverrideType;
	}

	public EmployeePayrollTax(EmployeePayroll employeePayroll, EmployeeTax employeeTax,
			TaxOverrideFrom taxOverrideFrom, TaxOverrideType taxOverrideType,
			BigDecimal taxOverrideValue, BigDecimal calculatedTax, BigDecimal calculatedY2d) {
		this.employeePayroll = employeePayroll;
		this.employeeTax = employeeTax;
		this.taxOverrideFrom = taxOverrideFrom;
		this.taxOverrideType = taxOverrideType;
		this.taxOverrideValue = taxOverrideValue;
		this.calculatedTax = calculatedTax;
		this.calculatedY2d = calculatedY2d;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_payroll_id")
	public EmployeePayroll getEmployeePayroll() {
		return this.employeePayroll;
	}

	public void setEmployeePayroll(EmployeePayroll employeePayroll) {
		this.employeePayroll = employeePayroll;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "employee_tax_id")
	public EmployeeTax getEmployeeTax() {
		return this.employeeTax;
	}

	public void setEmployeeTax(EmployeeTax employeeTax) {
		this.employeeTax = employeeTax;
	}

	@Column(name = "tax_override_from")
	public TaxOverrideFrom getTaxOverrideFrom() {
		return taxOverrideFrom;
	}

	public void setTaxOverrideFrom(TaxOverrideFrom taxOverrideFrom) {
		this.taxOverrideFrom = taxOverrideFrom;
	}

	@Column(name = "tax_override_type")
	public TaxOverrideType getTaxOverrideType() {
		return this.taxOverrideType;
	}

	public void setTaxOverrideType(TaxOverrideType taxOverrideType) {
		this.taxOverrideType = taxOverrideType;
	}

	@Column(name = "tax_override_value", precision = 10, scale = 2)
	public BigDecimal getTaxOverrideValue() {
		return this.taxOverrideValue;
	}

	public void setTaxOverrideValue(BigDecimal taxOverrideValue) {
		this.taxOverrideValue = taxOverrideValue;
	}

	@Column(name = "calculated_tax", precision = 10, scale = 2)
	public BigDecimal getCalculatedTax() {
		return calculatedTax;
	}

	public void setCalculatedTax(BigDecimal calculatedTax) {
		this.calculatedTax = calculatedTax;
	}

	@Column(name = "calculated_y2d", precision = 10, scale = 2)
	public BigDecimal getCalculatedY2d() {
		return calculatedY2d;
	}

	public void setCalculatedY2d(BigDecimal calculatedY2d) {
		this.calculatedY2d = calculatedY2d;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("EmployeePayrollTax [id=");
		builder.append(id);
		builder.append(", employeePayroll=");
		builder.append(employeePayroll.getId());
		builder.append(", employeeTax=");
		builder.append(employeeTax.getId());
		builder.append(", taxOverrideFrom=");
		builder.append(taxOverrideFrom);
		builder.append(", taxOverrideType=");
		builder.append(taxOverrideType);
		builder.append(", taxOverrideValue=");
		builder.append(taxOverrideValue);
		builder.append(", calculatedTax=");
		builder.append(calculatedTax);
		builder.append(", calculatedY2d=");
		builder.append(calculatedY2d);
		builder.append("]");
		return builder.toString();
	}

}
