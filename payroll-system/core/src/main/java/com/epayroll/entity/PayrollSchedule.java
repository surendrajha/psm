package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.Set;
import java.util.TreeSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import org.codehaus.jackson.annotate.JsonIgnoreProperties;

/**
 * PayrollSchedule generated by hbm2java
 */
@Entity
@Table(name = "payroll_schedule")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
@JsonIgnoreProperties({ "payrollFrequency", "payrolls" })
public class PayrollSchedule implements java.io.Serializable, Comparable<PayrollSchedule> {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1162801158126438368L;

	private Long id;
	private PayrollFrequency payrollFrequency;
	private Date periodStartDate;
	private Date periodEndDate;
	private Date checkDate;
	private Date approvedOn;
	private Status status;
	private Set<Payroll> payrolls = new TreeSet<Payroll>();

	public enum Status {
		CURRENT("Current"), PROCESSED("Processed"), DELETED("Deleted"), FUTURE("Future"), SUBMITTED_FOR_APPROVAL(
				"Submitted for Approval"), ENTERED("Entered");

		private String name;

		private Status(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	public PayrollSchedule() {
	}

	public PayrollSchedule(PayrollFrequency payrollFrequency, Date checkDate, Date periodEndDate,
			Date periodStartDate) {
		this.payrollFrequency = payrollFrequency;
		this.checkDate = checkDate;
		this.periodEndDate = periodEndDate;
		this.periodStartDate = periodStartDate;
	}

	public PayrollSchedule(PayrollFrequency payrollFrequency, Date approvedOn, Date checkDate,
			Date periodEndDate, Date periodStartDate, Status status, Set<Payroll> payrolls) {
		this.payrollFrequency = payrollFrequency;
		this.approvedOn = approvedOn;
		this.checkDate = checkDate;
		this.periodEndDate = periodEndDate;
		this.periodStartDate = periodStartDate;
		this.status = status;
		this.payrolls = payrolls;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payroll_frequency_id")
	public PayrollFrequency getPayrollFrequency() {
		return this.payrollFrequency;
	}

	public void setPayrollFrequency(PayrollFrequency payrollFrequency) {
		this.payrollFrequency = payrollFrequency;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "period_start_date", length = 10)
	public Date getPeriodStartDate() {
		return this.periodStartDate;
	}

	public void setPeriodStartDate(Date periodStartDate) {
		this.periodStartDate = periodStartDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "period_end_date", length = 10)
	public Date getPeriodEndDate() {
		return this.periodEndDate;
	}

	public void setPeriodEndDate(Date periodEndDate) {
		this.periodEndDate = periodEndDate;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "check_date", length = 10)
	public Date getCheckDate() {
		return this.checkDate;
	}

	public void setCheckDate(Date checkDate) {
		this.checkDate = checkDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "approved_on", length = 19)
	public Date getApprovedOn() {
		return this.approvedOn;
	}

	public void setApprovedOn(Date approvedOn) {
		this.approvedOn = approvedOn;
	}

	@Column(name = "status", length = 20)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "payrollSchedule")
	public Set<Payroll> getPayrolls() {
		return this.payrolls;
	}

	public void setPayrolls(Set<Payroll> payrolls) {
		this.payrolls = payrolls;
	}

	@Override
	public int compareTo(PayrollSchedule o) {
		return this.getPeriodStartDate().compareTo(o.getPeriodStartDate());
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("PayrollSchedule [id=");
		builder.append(id);
		builder.append(", payrollFrequency=");
		builder.append(payrollFrequency.getId());
		builder.append(", periodStartDate=");
		builder.append(periodStartDate);
		builder.append(", periodEndDate=");
		builder.append(periodEndDate);
		builder.append(", checkDate=");
		builder.append(checkDate);
		builder.append(", approvedOn=");
		builder.append(approvedOn);
		builder.append(", status=");
		builder.append(status);
		builder.append("]");
		return builder.toString();
	}

}
