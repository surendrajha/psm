package com.epayroll.entity;

// Generated Dec 12, 2012 9:09:02 PM by Hibernate Tools 3.4.0.CR1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name = "company_user")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class CompanyUser implements java.io.Serializable {

	private static final long serialVersionUID = 4188882339191244327L;

	private Long id;
	private Company company;
	private User user;
	private Boolean mobileAccess;
	private String firmName;
	private Set<MobileDevice> mobileDevices = new HashSet<MobileDevice>(0);

	public CompanyUser() {
	}

	public CompanyUser(Company company) {
		this.company = company;
	}

	public CompanyUser(Company company, User user, Boolean mobileAccess, String firmName,
			Set<MobileDevice> mobileDevices) {
		this.company = company;
		this.user = user;
		this.mobileAccess = mobileAccess;
		this.firmName = firmName;
		this.setMobileDevices(mobileDevices);
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "company_id")
	public Company getCompany() {
		return this.company;
	}

	public void setCompany(Company company) {
		this.company = company;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_id")
	public User getUser() {
		return user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "mobile_access")
	public Boolean getMobileAccess() {
		return this.mobileAccess;
	}

	public void setMobileAccess(Boolean mobileAccess) {
		this.mobileAccess = mobileAccess;
	}

	@Column(name = "firm_name", length = 45)
	public String getFirmName() {
		return this.firmName;
	}

	public void setFirmName(String firmName) {
		this.firmName = firmName;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "companyUser")
	public Set<MobileDevice> getMobileDevices() {
		return mobileDevices;
	}

	public void setMobileDevices(Set<MobileDevice> mobileDevices) {
		this.mobileDevices = mobileDevices;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("User [id=");
		builder.append(id);
		builder.append(", company=");
		builder.append(company.getId());
		builder.append(", mobileAccess=");
		builder.append(mobileAccess);
		builder.append(", firmName=");
		builder.append(firmName);
		builder.append("]");
		return builder.toString();
	}

}
