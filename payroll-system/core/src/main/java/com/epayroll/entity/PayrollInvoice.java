package com.epayroll.entity;

// Generated Dec 22, 2012 3:36:44 AM by Hibernate Tools 3.4.0.CR1

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PayrollInvoice generated by hbm2java
 */
@Entity
@Table(name = "payroll_invoice")
@org.hibernate.annotations.Entity(dynamicInsert = true, dynamicUpdate = true)
public class PayrollInvoice implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -8620190883393302733L;

	public enum Status {
		GENERATED("Generated"), PAID("Paid"), UNPAID("Unpaid"), CANCELLED("Cancelled");
		private String name;

		private Status(String name) {
			this.name = name;
		}

		public String getName() {
			return name;
		}
	}

	private long id;
	private Payroll payroll;
	private String invoiceNo;
	private Date generatedOn;
	private Date paymentDueDate;
	private BigDecimal invoiceAmount;
	private Status status;
	private Date paymentOrCancellationDate;

	public PayrollInvoice() {
	}

	public PayrollInvoice(long id, Payroll payroll) {
		this.id = id;
		this.payroll = payroll;
	}

	public PayrollInvoice(long id, Payroll payroll, String invoiceNo, Date generatedOn,
			Date paymentDueDate, BigDecimal invoiceAmount, Status status,
			Date paymentOrCancellationDate) {
		this.id = id;
		this.payroll = payroll;
		this.invoiceNo = invoiceNo;
		this.generatedOn = generatedOn;
		this.paymentDueDate = paymentDueDate;
		this.invoiceAmount = invoiceAmount;
		this.status = status;
		this.paymentOrCancellationDate = paymentOrCancellationDate;
	}

	@Id
	@Column(name = "id", unique = true)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "payroll_id")
	public Payroll getPayroll() {
		return this.payroll;
	}

	public void setPayroll(Payroll payroll) {
		this.payroll = payroll;
	}

	@Column(name = "invoice_no", length = 45)
	public String getInvoiceNo() {
		return this.invoiceNo;
	}

	public void setInvoiceNo(String invoiceNo) {
		this.invoiceNo = invoiceNo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "generated_on", length = 19)
	public Date getGeneratedOn() {
		return this.generatedOn;
	}

	public void setGeneratedOn(Date generatedOn) {
		this.generatedOn = generatedOn;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "payment_due_date", length = 10)
	public Date getPaymentDueDate() {
		return this.paymentDueDate;
	}

	public void setPaymentDueDate(Date paymentDueDate) {
		this.paymentDueDate = paymentDueDate;
	}

	@Column(name = "invoice_amount", precision = 10, scale = 2)
	public BigDecimal getInvoiceAmount() {
		return this.invoiceAmount;
	}

	public void setInvoiceAmount(BigDecimal invoiceAmount) {
		this.invoiceAmount = invoiceAmount;
	}

	@Column(name = "status", length = 45)
	public Status getStatus() {
		return this.status;
	}

	public void setStatus(Status status) {
		this.status = status;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "payment_or_cancellation_date", length = 10)
	public Date getPaymentOrCancellationDate() {
		return this.paymentOrCancellationDate;
	}

	public void setPaymentOrCancellationDate(Date paymentOrCancellationDate) {
		this.paymentOrCancellationDate = paymentOrCancellationDate;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("PayrollInvoice [id=");
		builder.append(id);
		builder.append(", payroll=");
		builder.append(payroll.getId());
		builder.append(", invoiceNo=");
		builder.append(invoiceNo);
		builder.append(", generatedOn=");
		builder.append(generatedOn);
		builder.append(", paymentDueDate=");
		builder.append(paymentDueDate);
		builder.append(", invoiceAmount=");
		builder.append(invoiceAmount);
		builder.append(", status=");
		builder.append(status);
		builder.append(", paymentOrCancellationDate=");
		builder.append(paymentOrCancellationDate);
		builder.append("]");
		return builder.toString();
	}

}
